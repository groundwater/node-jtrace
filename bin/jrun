#!/usr/bin/env node

var fs     = require('fs');
var http   = require('http');
var util   = require('util');
var parse  = require('url').parse;
var vm     = require('vm');
var solid  = require('lib-stream-solidify');
var probe  = require('../index.js');

function yes() { return true; }

var server = http.createServer(function (req, res) {
  var query = parse(req.url, true).query;

  // intercept console.log statements and send to client
  var write = function () {
    res.write(util.format.apply(null, arguments) + '\n');
  };

  solid(req).text(function (err, src) {
    var module  = {
      exports: {},
      console: {
        log   : write,
        dir   : write,
        info  : write,
        warn  : write,
        error : write,
      },
    };
    module.module = module;
    var context = vm.createContext(module);
    vm.runInContext(src, context);

    // set handler
    probe.tracer.on(yes, context.exports.bind(query));
  });

  // disengage tracing when client disconnects
  req.on('close', function () {
    probe.tracer.clear();
  });
});

if (fs.existsSync('.jtrace.sock')) fs.unlinkSync('.jtrace.sock')
server.listen('.jtrace.sock');

var app = process.argv[2];

if (app) require(process.cwd() + '/' + app);
else {
  console.error('App Required');
  process.exit(1)
}
